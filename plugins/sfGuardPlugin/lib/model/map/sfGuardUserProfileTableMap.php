<?php


/**
 * This class defines the structure of the 'sf_guard_user_profile' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Thu Mar  7 00:03:18 2013
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    plugins.sfGuardPlugin.lib.model.map
 */
class SfGuardUserProfileTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'plugins.sfGuardPlugin.lib.model.map.SfGuardUserProfileTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('sf_guard_user_profile');
		$this->setPhpName('SfGuardUserProfile');
		$this->setClassname('SfGuardUserProfile');
		$this->setPackage('plugins.sfGuardPlugin.lib.model');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, 11, null);
		$this->addForeignKey('USER_ID', 'UserId', 'INTEGER', 'sf_guard_user', 'ID', true, 11, null);
		$this->addColumn('FIRST_NAME', 'FirstName', 'VARCHAR', false, 20, null);
		$this->addColumn('LAST_NAME', 'LastName', 'VARCHAR', false, 20, null);
		$this->addColumn('BIRTHDAY', 'Birthday', 'DATE', false, null, null);
		$this->addForeignKey('ID_ZONE', 'IdZone', 'INTEGER', 'zone', 'ID_ZONE', true, 11, null);
		$this->addColumn('EMAIL', 'Email', 'VARCHAR', true, 100, null);
		$this->addColumn('GENDER', 'Gender', 'VARCHAR', true, 10, null);
		$this->addColumn('USER_BANK_ID', 'UserBankId', 'VARCHAR', true, 45, null);
		$this->addForeignKey('ID_POSITION', 'IdPosition', 'INTEGER', 'position', 'ID_POSITION', true, 11, null);
		$this->addColumn('ID_CENTER_COST', 'IdCenterCost', 'VARCHAR', true, 45, null);
		$this->addForeignKey('ID_DEPTO', 'IdDepto', 'INTEGER', 'depto', 'ID_DEPTO', true, 11, null);
		$this->addForeignKey('ID_AREA', 'IdArea', 'INTEGER', 'area', 'ID_AREA', true, 11, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('sfGuardUser', 'sfGuardUser', RelationMap::MANY_TO_ONE, array('user_id' => 'id', ), 'CASCADE', 'RESTRICT');
    $this->addRelation('Zone', 'Zone', RelationMap::MANY_TO_ONE, array('id_zone' => 'id_zone', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('Position', 'Position', RelationMap::MANY_TO_ONE, array('id_position' => 'id_position', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('Depto', 'Depto', RelationMap::MANY_TO_ONE, array('id_depto' => 'id_depto', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('Area', 'Area', RelationMap::MANY_TO_ONE, array('id_area' => 'id_area', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('Quizlog', 'Quizlog', RelationMap::ONE_TO_MANY, array('user_id' => 'id_usrql', ), 'RESTRICT', 'RESTRICT');
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
		);
	} // getBehaviors()

} // SfGuardUserProfileTableMap
